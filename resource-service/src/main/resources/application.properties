server.port=${RESOURCE_SERVICE_PORT:8071}
spring.application.name=resource-service

spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5432/resource-db}
spring.datasource.username=${POSTGRES_USER:postgres}
spring.datasource.password=${POSTGRES_PASSWORD:postgres}

spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=none
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

eureka.client.service-url.defaultZone=${EUREKA_CLIENT_SERVICEURL_DEFAULTZONE:http://localhost:8761/eureka/}
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true

aws.s3-properties.bucket=resource-bucket
aws.region=us-east-1
aws.endpoint=${AWS_ENDPOINT_URL:http://localhost:4566}
aws.credentials.access-key=${AWS_ACCESS_KEY:test}
aws.credentials.secret-key=${AWS_SECRET_KEY:test}

spring.kafka.bootstrap-servers= ${SPRING_KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
app.kafka.topic=resource-events


management.endpoints.web.exposure.include=health
management.endpoint.health.show-details=always
management.endpoint.health.probes.enabled=true