spring:
    application:
        name: ${SPRING_APPLICATION_NAME:resource-processor}
    kafka:
        bootstrap-servers: ${SPRING_KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
        admin:
            auto-create: true
        topic: resource-events
        resource-processor-topic: resource-processor-events
        consumer:
            group-id: resource-processor
            auto-offset-reset: earliest
            key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
            value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
            properties:
                spring.json.trusted.packages: "*"
        producer:
            key-serializer: org.apache.kafka.common.serialization.StringSerializer
            value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
server:
    port: ${RESOURCE_PROCESSOR_PORT:8073}

services:
    resource-service:
        url: ${RESOURCE_SERVICE_URL:http://localhost:8071}
    song-service:
        url: ${SONG_SERVICE_URL:http://localhost:8072}

eureka:
    client:
        service-url:
            defaultZone: ${EUREKA_CLIENT_SERVICEURL_DEFAULTZONE:http://localhost:8761/eureka/}
        fetch-registry: true
        register-with-eureka: true

management:
    endpoints:
        web:
            exposure:
                include: health
    endpoint:
        health:
            show-details: always
            probes:
                enabled: true